{"ast":null,"code":"import _asyncToGenerator from\"/Users/ajansoma/Desktop/Node/nasa-project/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/ajansoma/Desktop/Node/nasa-project/client/node_modules/@babel/runtime/regenerator/index.js\";var API_URL=\"http://localhost:5000\";function httpGetPlanets(){return _httpGetPlanets.apply(this,arguments);}function _httpGetPlanets(){_httpGetPlanets=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(API_URL,\"/planets\"));case 2:response=_context.sent;_context.next=5;return response.json();case 5:return _context.abrupt(\"return\",_context.sent);case 6:case\"end\":return _context.stop();}}},_callee);}));return _httpGetPlanets.apply(this,arguments);}function httpGetLaunches(){return _httpGetLaunches.apply(this,arguments);}function _httpGetLaunches(){_httpGetLaunches=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"\".concat(API_URL,\"/launches\"));case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:return _context2.abrupt(\"return\",_context2.sent);case 6:case\"end\":return _context2.stop();}}},_callee2);}));return _httpGetLaunches.apply(this,arguments);}function httpSubmitLaunch(_x){return _httpSubmitLaunch.apply(this,arguments);}function _httpSubmitLaunch(){_httpSubmitLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(launch){var response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch(\"\".concat(API_URL,\"/launches\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(launch)});case 3:response=_context3.sent;_context3.next=6;return response.json();case 6:return _context3.abrupt(\"return\",_context3.sent);case 9:_context3.prev=9;_context3.t0=_context3[\"catch\"](0);return _context3.abrupt(\"return\",{ok:false});case 12:case\"end\":return _context3.stop();}}},_callee3,null,[[0,9]]);}));return _httpSubmitLaunch.apply(this,arguments);}function httpAbortLaunch(_x2){return _httpAbortLaunch.apply(this,arguments);}function _httpAbortLaunch(){_httpAbortLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:case\"end\":return _context4.stop();}}},_callee4);}));return _httpAbortLaunch.apply(this,arguments);}export{httpGetPlanets,httpGetLaunches,httpSubmitLaunch,httpAbortLaunch};","map":{"version":3,"sources":["/Users/ajansoma/Desktop/Node/nasa-project/client/src/hooks/requests.js"],"names":["API_URL","httpGetPlanets","fetch","response","json","httpGetLaunches","httpSubmitLaunch","launch","method","headers","body","JSON","stringify","ok","httpAbortLaunch","id"],"mappings":"+QAAA,GAAMA,CAAAA,OAAO,wBAAb,C,QAEeC,CAAAA,c,oJAAf,sKACyBC,CAAAA,KAAK,WAAIF,OAAJ,aAD9B,QACQG,QADR,qCAEeA,CAAAA,QAAQ,CAACC,IAAT,EAFf,6G,yDAOeC,CAAAA,e,uJAAf,4KACyBH,CAAAA,KAAK,WAAIF,OAAJ,cAD9B,QACQG,QADR,uCAEeA,CAAAA,QAAQ,CAACC,IAAT,EAFf,iH,0DAOeE,CAAAA,gB,4JAAf,kBAAgCC,MAAhC,2KAE2BL,CAAAA,KAAK,WAAIF,OAAJ,cAAwB,CAClDQ,MAAM,CAAE,MAD0C,CAElDC,OAAO,CAAE,CACP,eAAgB,kBADT,CAFyC,CAKlDC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf,CAL4C,CAAxB,CAFhC,QAEUJ,QAFV,uCASiBA,CAAAA,QAAQ,CAACC,IAAT,EATjB,qJAWW,CACLS,EAAE,CAAE,KADC,CAXX,wE,2DAmBeC,CAAAA,e,0JAAf,kBAA+BC,EAA/B,uK,kDAKA,OAASd,cAAT,CAAyBI,eAAzB,CAA0CC,gBAA1C,CAA4DQ,eAA5D","sourcesContent":["const API_URL = `http://localhost:5000`;\n\nasync function httpGetPlanets() {\n  const response = await fetch(`${API_URL}/planets`);\n  return await response.json();\n  // TODO: Once API is ready.\n  // Load planets and return as JSON.\n}\n\nasync function httpGetLaunches() {\n  const response = await fetch(`${API_URL}/launches`);\n  return await response.json();\n  // TODO: Once API is ready.\n  // Load launches, sort by flight number, and return as JSON.\n}\n\nasync function httpSubmitLaunch(launch) {\n  try {\n    const response = await fetch(`${API_URL}/launches`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(launch),\n    });\n    return await response.json();\n  } catch (err) {\n    return {\n      ok: false,\n    };\n  }\n  // TODO: Once API is ready.\n  // Submit given launch data to launch system.\n}\n\nasync function httpAbortLaunch(id) {\n  // TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };\n"]},"metadata":{},"sourceType":"module"}